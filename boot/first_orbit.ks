FUNCTION EXECUTE_AIM{
	PARAMETER minimumAlt.
	PARAMETER horizonMarker.
	PARAMETER targetAngle.
	PARAMETER targetThrottle.
	LOCK THROTTLE TO targetThrottle.
	SET PTHROT TO THROTTLE.
	SET PTHRUST TO MAXTHRUST.
	IF MAXTHRUST < 10 {STAGE.}
	UNTIL FALSE{
    IF (MAXTHRUST < 10){
			LOCK THROTTLE TO 0.
			STAGE.
      wait 1.
			LOCK THROTTLE TO PTHROT.
			WAIT 1.
		}
		SET PTHRUST TO MAXTHRUST.
		IF ALTITUDE>minimumAlt{
			LOCK THROTTLE TO targetThrottle.
			LOCK STEERING TO HEADING(horizonMarker,targetAngle).
			BREAK.
		}
		WAIT 0.5.
	}
}

for i in list(1,2,3,4,5){
  clearscreen.
  print "launching in " + (5-i).
  wait 1.
}

STAGE.
EXECUTE_AIM(0,90,90,1).
EXECUTE_AIM(3000,90,80,1).
EXECUTE_AIM(10000,90,70,1).
EXECUTE_AIM(15000,90,70,1).
EXECUTE_AIM(20000,90,50,1).
EXECUTE_AIM(30000,90,30,1).
WAIT UNTIL APOAPSIS > 100000.
LOCK THROTTLE TO 0.
WAIT UNTIL ETA:APOAPSIS < 40.
LOCK STEERING TO HEADING(90,0).
WAIT UNTIL ETA:APOAPSIS <20.
LOCK THROTTLE TO 1.
UNTIL PERIAPSIS > 90000{
	SET PTHRUST TO MAXTHRUST.
	WAIT 0.5.
	IF (PTHRUST - MAXTHRUST > 10){
		STAGE.
		LOCK THROTTLE TO 1.
	}
	IF (APOAPSIS > 130000) {LOCK THROTTLE TO 0. WAIT UNTIL ETA:APOAPSIS < 10. LOCK STEERING TO PROGRADE. LOCK THROTTLE TO 1.}
	IF (ETA:APOAPSIS > 40) AND (ETA:APOAPSIS < 70) {LOCK THROTTLE TO 0. WAIT UNTIL ETA:APOAPSIS < 10. LOCK THROTTLE TO 1.}
}
LOCK THROTTLE TO 0.
//now we should be in orbit

set brakes to true.
wait 10.

wait until (eta:APOAPSIS < 10).
lock steering to retrograde.
until (PERIAPSIS < 10000) {
  lock throttle to 1.
  wait 0.5.
}
lock throttle to 0.
stage.
until (altitude < 5000) {
  lock steering to retrograde.
  wait 0.5.
}
stage.
